{% extends 'OroUIBundle:actions:view.html.twig' %}
{% import 'CBSchedulerBundle::templates.html.twig' as schedulerTemplates %}

{% oro_title_set({params : {"%schedulername%": 'Scheduler'|trans }}) %}

{% block navButtons %}{% endblock navButtons %}

{% block breadcrumb %}{% endblock breadcrumb %}

{% block pageHeader %}
    {% if breadcrumbs is not defined %}
        {% set breadcrumbs = {'entityTitle': 'cb.scheduler.entity_label'|trans } %}
    {% endif %}
    {{ parent() }}
{% endblock pageHeader %}

{% block stats %}{% endblock stats %}

{% block content_data %}
    {% set schedulerOptions = {
        schedulerOptions: scheduler,
        eventsItemsJson: render(path('cb_api_get_schedulerevents', {scheduler: null, start: startDate|date('c'), end: endDate|date('c'), subordinate: true})),
        eventsOptions: {
            defaultDate: 'now'|date('c', oro_timezone()),
            'containerSelector': '.calendar-events',
            'schedulerLicenseKey': 'GPL-My-Project-Is-Open-Source',
            'defaultView': 'timelineMonth',
            'itemViewTemplateSelector': '#template-view-scheduler-event',
            'itemFormTemplateSelector': '#template-scheduler-event',
            'leftHeader': 'prev,next today',
            'centerHeader': 'title',
            'rightHeader': 'timelineDay,timelineWeek,timelineMonth,timelineYear',
        },
        colorManagerOptions: {
            colors: oro_config_value('oro_calendar.calendar_colors')
        }
    } %}

{#<div class="row-fluid form-horizontal" id="calendar"#}
<div class="oro-page clearfix" id="calendar"
    data-page-component-module="cbscheduler/js/app/components/scheduler-component"
    data-page-component-options="{{ schedulerOptions | json_encode }}">

    {#<div class="responsive-block">#}
    <style>
        .oro-page .oro-page-body {
            width: 100%;
        }
    </style>
    <div class="oro-page-body search-results-column">
        <div class="calendar-events"></div>
    </div>

    {{ schedulerTemplates.scheduler_event_view_template('template-view-scheduler-event') }}
    {{ schedulerTemplates.scheduler_event_form_template('template-scheduler-event', event_form) }}
</div>



    {# ************** de aici *************** #}



    {#<div class="row-fluid form-horizontal">#}
        {#<div class="responsive-block">#}

            {#<div id="calendar"></div>#}
        {#</div>#}
    {#</div>#}

    {#<script type="text/javascript">#}
        {#require(['jquery', 'moment', 'fullscheduler', 'fullcalendar', 'routing', 'oro/dialog-widget'],#}
                {#function ($, moment, fullscheduler, fullcalendar, routing, DialogWidget) {#}

                    {#$(window).load(function() { // document ready#}
                        {#$('#calendar').fullCalendar({#}

                            {#aspectRatio: 1.9,#}
                            {#slotDuration: {days: 1},#}
                            {#allDayDefault: true,#}
                            {#weekNumbers: true,#}

                            {#schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source',#}

                            {#header: {#}
                                {#left: 'today prev,next',#}
                                {#center: 'title',#}
                                {#right: 'timelineDay,timelineWeek,timelineMonth,timelineYear'#}
                            {#},#}

                            {#defaultView: 'timelineMonth',#}

                            {#eventClick: function(calEvent, jsEvent, view) {#}

                                {#alert('Event: ' + calEvent.title);#}
                                {#alert('Coordinates: ' + jsEvent.pageX + ',' + jsEvent.pageY);#}
                                {#alert('View: ' + view.name);#}

                                {#// change the border color just for fun#}
                                {#$(this).css('border-color', 'red');#}

                            {#},#}

                            {#dayClick: function(date, jsEvent, view, resource) {#}

                                {#var widget = new DialogWidget({#}
                                    {#'url': routing.generate('cb_scheduler_event_add', {panelView: resource.id, start: date.format()}),#}
                                    {#'title': 'Add Event',#}
                                    {#stateEnabled: false,#}
                                    {#dialogOptions: {#}
                                        {#'modal': true,#}
                                        {#'allowMinimize': false,#}
                                        {#'width': 900,#}
                                        {#'autoResize':false#}
                                    {#}#}
                                {#});#}
                                {#widget.render();#}

                                {#alert('Clicked on: ' + date.format() + ' resource: ' + resource.id);#}
                            {#},#}

                            {#views: {#}
                            {#},#}
                            {#resourceAreaWidth: '15%',#}
                            {#resourceColumns: [#}
                                {#{#}
                                    {#labelText: 'Fata panou',#}
                                    {#field: 'name'#}
                                {#}#}
                            {#],#}
                            {#resources: {#}
                                {#url: routing.generate('cb_newage_panel_view_api_get_panel_views')#}
                            {#},#}

                            {#events: routing.generate('cb_api_get_scheduler_events')#}
                        {#});#}
                    {#});#}
                {#}#}
        {#);#}
    {#</script>#}
{% endblock content_data %}